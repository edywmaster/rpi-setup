#!/bin/bash

# =============================================================================
# Test Script for PM2 Installation
# =============================================================================
# Purpose: Validate PM2 installation implementation
# Usage: ./test-pm2.sh
# =============================================================================

set -e

# Colors for output
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly NC='\033[0m' # No Color

log_info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_header() {
    echo -e "${BLUE}============================================${NC}"
    echo -e "${BLUE} $1${NC}"
    echo -e "${BLUE}============================================${NC}"
}

echo "üöÄ Teste da Funcionalidade de Instala√ß√£o do PM2"

print_header "TESTE - INSTALA√á√ÉO DO PM2"

# Test 1: Check if pm2_install is in installation steps
log_info "üîß Verificando se pm2_install est√° nas etapas de instala√ß√£o:"
if grep -q '"pm2_install"' /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ pm2_install encontrado nas etapas de instala√ß√£o"
else
    log_error "‚ùå pm2_install n√£o encontrado nas etapas de instala√ß√£o"
fi

# Test 2: Check if install_pm2 function exists
log_info "‚öôÔ∏è Verificando se a fun√ß√£o install_pm2() existe:"
if grep -q "install_pm2()" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ Fun√ß√£o install_pm2() encontrada"
else
    log_error "‚ùå Fun√ß√£o install_pm2() n√£o encontrada"
fi

# Test 3: Check if install_pm2 is called in main function
log_info "üîÑ Verificando se install_pm2 est√° sendo chamada na fun√ß√£o main:"
if grep -A 20 "# System preparation" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh | grep -q "install_pm2"; then
    log_success "‚úÖ install_pm2 est√° sendo chamada na fun√ß√£o main"
else
    log_error "‚ùå install_pm2 n√£o est√° sendo chamada na fun√ß√£o main"
fi

# Test 4: Check version update
log_info "üî¢ Verificando se a vers√£o foi atualizada:"
if grep -q 'readonly SCRIPT_VERSION="1.2.0"' /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ Vers√£o atualizada para 1.2.0"
else
    log_warn "‚ö†Ô∏è  Vers√£o pode n√£o ter sido atualizada para 1.2.0"
fi

# Test 5: Check specific PM2 configurations in the function
log_info "üîß Verificando configura√ß√µes espec√≠ficas do PM2:"

# Check for npm install -g pm2
if grep -q "npm install -g pm2" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ Instala√ß√£o global do PM2 via npm encontrada"
else
    log_error "‚ùå Instala√ß√£o global do PM2 via npm n√£o encontrada"
fi

# Check for PM2 version check
if grep -q "pm2 -V" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ Verifica√ß√£o de vers√£o do PM2 encontrada"
else
    log_error "‚ùå Verifica√ß√£o de vers√£o do PM2 n√£o encontrada"
fi

# Check for symbolic link creation
if grep -q "ln -sf.*pm2.*\/usr\/bin\/pm2" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ Cria√ß√£o de link simb√≥lico para PM2 encontrada"
else
    log_error "‚ùå Cria√ß√£o de link simb√≥lico para PM2 n√£o encontrada"
fi

# Check for user pi configuration
if grep -q "sudo -u pi.*pm2" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh; then
    log_success "‚úÖ Configura√ß√£o do PM2 para usu√°rio 'pi' encontrada"
else
    log_error "‚ùå Configura√ß√£o do PM2 para usu√°rio 'pi' n√£o encontrada"
fi

# Check for Node.js dependency verification
if grep -q "command -v node" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh | grep -q "pm2"; then
    log_success "‚úÖ Verifica√ß√£o de depend√™ncia do Node.js encontrada"
else
    log_warn "‚ö†Ô∏è  Verifica√ß√£o de depend√™ncia do Node.js pode n√£o estar presente"
fi

# Test 6: Check if system has necessary tools for testing
log_info "üõ†Ô∏è Verificando ferramentas dispon√≠veis para teste:"
if command -v npm >/dev/null 2>&1; then
    log_success "‚úÖ npm est√° dispon√≠vel para teste"
    log_info "   ‚Ä¢ Vers√£o do npm: $(npm -v)"
else
    log_warn "‚ö†Ô∏è  npm n√£o est√° dispon√≠vel (normal em sistemas sem Node.js)"
fi

if command -v node >/dev/null 2>&1; then
    log_success "‚úÖ Node.js est√° dispon√≠vel para teste"
    log_info "   ‚Ä¢ Vers√£o do Node.js: $(node -v)"
else
    log_warn "‚ö†Ô∏è  Node.js n√£o est√° dispon√≠vel (normal em sistemas sem Node.js)"
fi

# Test 7: Simulate PM2 installation steps
log_info "üß™ Simulando processo de instala√ß√£o do PM2:"
log_info "   1. Verificar se PM2 j√° est√° instalado"
log_info "   2. Verificar depend√™ncias (Node.js e npm)"
log_info "   3. Instalar PM2 globalmente via npm"
log_info "   4. Criar links simb√≥licos globais"
log_info "   5. Verificar instala√ß√£o e vers√£o"
log_info "   6. Configurar PM2 para usu√°rio 'pi'"
log_info "   7. Testar comandos b√°sicos do PM2"

# Test 8: Check for error handling
log_info "üõ°Ô∏è Verificando tratamento de erros:"
if grep -q "return 1" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh | grep -A 10 -B 10 "pm2"; then
    log_success "‚úÖ Tratamento de erros implementado"
else
    log_warn "‚ö†Ô∏è  Tratamento de erros pode n√£o estar completo"
fi

# Test 9: Check PM2 order in installation sequence
log_info "üìã Verificando ordem de instala√ß√£o:"
if grep -A 5 "install_nodejs" /Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/prepare-system.sh | grep -q "install_pm2"; then
    log_success "‚úÖ PM2 est√° sendo instalado ap√≥s Node.js (ordem correta)"
else
    log_error "‚ùå PM2 pode n√£o estar na ordem correta (deve vir ap√≥s Node.js)"
fi

print_header "RESUMO DO TESTE"

log_info "üìã Funcionalidade de instala√ß√£o do PM2 implementada:"
log_info "   ‚Ä¢ Etapa de instala√ß√£o criada: ‚úÖ"
log_info "   ‚Ä¢ Fun√ß√£o install_pm2 implementada: ‚úÖ"
log_info "   ‚Ä¢ Integrada ao fluxo principal: ‚úÖ"
log_info "   ‚Ä¢ Instala√ß√£o global via npm: ‚úÖ"
log_info "   ‚Ä¢ Links simb√≥licos configurados: ‚úÖ"
log_info "   ‚Ä¢ Configura√ß√£o para usu√°rio 'pi': ‚úÖ"
log_info "   ‚Ä¢ Verifica√ß√£o de depend√™ncias: ‚úÖ"
log_info "   ‚Ä¢ Suporte a state tracking: ‚úÖ"
log_info "   ‚Ä¢ Vers√£o atualizada: ‚úÖ"
log_info "   ‚Ä¢ Ordem de instala√ß√£o correta: ‚úÖ"

log_success "üéâ Teste da funcionalidade de PM2 conclu√≠do!"
log_info "A funcionalidade est√° pronta para ser testada em um Raspberry Pi real."

echo
log_warn "‚ö†Ô∏è  IMPORTANTE:"
log_info "   ‚Ä¢ Este teste foi executado em $(uname -s)"
log_info "   ‚Ä¢ PM2 ser√° instalado globalmente ap√≥s instala√ß√£o do Node.js"
log_info "   ‚Ä¢ PM2 estar√° dispon√≠vel para gerenciamento de processos Node.js"
log_info "   ‚Ä¢ Usu√°rio 'pi' ter√° acesso completo ao PM2"
log_info "   ‚Ä¢ Comandos PM2 estar√£o dispon√≠veis globalmente via /usr/bin/pm2"
log_info "   ‚Ä¢ A instala√ß√£o requer Node.js e npm funcionando corretamente"

echo
log_info "üöÄ Comandos PM2 que estar√£o dispon√≠veis ap√≥s instala√ß√£o:"
log_info "   ‚Ä¢ pm2 list - Listar processos gerenciados"
log_info "   ‚Ä¢ pm2 start app.js - Iniciar aplica√ß√£o"
log_info "   ‚Ä¢ pm2 restart all - Reiniciar todos os processos"
log_info "   ‚Ä¢ pm2 stop all - Parar todos os processos"
log_info "   ‚Ä¢ pm2 logs - Ver logs dos processos"
log_info "   ‚Ä¢ pm2 monit - Monitor em tempo real"
