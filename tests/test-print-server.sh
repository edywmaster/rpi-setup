#!/bin/bash

# =============================================================================
# Test Script for Kiosk Print Server
# =============================================================================
# Purpose: Validate print server implementation and functionality
# Usage: ./test-print-server.sh
# =============================================================================

set -e

# Colors for output
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly NC='\033[0m' # No Color

log_info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_header() {
    echo -e "${BLUE}============================================${NC}"
    echo -e "${BLUE} $1${NC}"
    echo -e "${BLUE}============================================${NC}"
}

echo "üñ®Ô∏è Teste do Servidor de Impress√£o Kiosk"

print_header "TESTE - SERVIDOR DE IMPRESS√ÉO"

# Test 1: Check if setup-kiosk.sh includes print server setup
log_info "üìÑ Verificando se o script setup-kiosk.sh inclui configura√ß√£o do servidor de impress√£o:"

script_path="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/scripts/setup-kiosk.sh"

if [[ ! -f "$script_path" ]]; then
    log_error "‚ùå Script setup-kiosk.sh n√£o encontrado"
    exit 1
fi

if grep -q "setup_print_server" "$script_path"; then
    log_success "‚úÖ Fun√ß√£o setup_print_server encontrada"
else
    log_error "‚ùå Fun√ß√£o setup_print_server n√£o encontrada"
fi

if grep -A 10 "INSTALLATION_STEPS" "$script_path" | grep -q "print_server"; then
    log_success "‚úÖ Etapa print_server adicionada ao processo de instala√ß√£o"
else
    log_error "‚ùå Etapa print_server n√£o encontrada nas etapas de instala√ß√£o"
fi

if grep -q "kiosk-print-server.service" "$script_path"; then
    log_success "‚úÖ Configura√ß√£o do servi√ßo systemd encontrada"
else
    log_error "‚ùå Configura√ß√£o do servi√ßo systemd n√£o encontrada"
fi

# Test 2: Check print server files
log_info "üìÅ Verificando arquivos do servidor de impress√£o:"

print_js_path="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/dist/kiosk/server/print.js"
if [[ -f "$print_js_path" ]]; then
    log_success "‚úÖ Arquivo print.js encontrado"
    
    # Check for key features
    if grep -q "health" "$print_js_path"; then
        log_success "‚úÖ Endpoint /health implementado"
    else
        log_error "‚ùå Endpoint /health n√£o encontrado"
    fi
    
    if grep -q "printers" "$print_js_path"; then
        log_success "‚úÖ Endpoint /printers implementado"
    else
        log_error "‚ùå Endpoint /printers n√£o encontrado"
    fi
    
    if grep -q "winston" "$print_js_path"; then
        log_success "‚úÖ Sistema de logging Winston configurado"
    else
        log_error "‚ùå Sistema de logging n√£o configurado"
    fi
    
    if grep -q "timeout" "$print_js_path"; then
        log_success "‚úÖ Configura√ß√£o de timeout implementada"
    else
        log_warn "‚ö†Ô∏è  Configura√ß√£o de timeout n√£o encontrada"
    fi
    
else
    log_error "‚ùå Arquivo print.js n√£o encontrado"
fi

printer_py_path="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/dist/kiosk/utils/printer.py"
if [[ -f "$printer_py_path" ]]; then
    log_success "‚úÖ Arquivo printer.py encontrado"
    
    # Check for key features
    if grep -q "def print_pdf" "$printer_py_path"; then
        log_success "‚úÖ Fun√ß√£o print_pdf implementada"
    else
        log_error "‚ùå Fun√ß√£o print_pdf n√£o encontrada"
    fi
    
    if grep -q "check_cups_service" "$printer_py_path"; then
        log_success "‚úÖ Verifica√ß√£o do servi√ßo CUPS implementada"
    else
        log_error "‚ùå Verifica√ß√£o do CUPS n√£o encontrada"
    fi
    
    if grep -q "logging" "$printer_py_path"; then
        log_success "‚úÖ Sistema de logging Python configurado"
    else
        log_error "‚ùå Sistema de logging Python n√£o configurado"
    fi
    
else
    log_error "‚ùå Arquivo printer.py n√£o encontrado"
fi

package_json_path="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/dist/kiosk/server/package.json"
if [[ -f "$package_json_path" ]]; then
    log_success "‚úÖ Arquivo package.json encontrado"
    
    # Check dependencies
    if grep -q "express" "$package_json_path"; then
        log_success "‚úÖ Depend√™ncia Express.js inclu√≠da"
    else
        log_error "‚ùå Depend√™ncia Express.js n√£o encontrada"
    fi
    
    if grep -q "winston" "$package_json_path"; then
        log_success "‚úÖ Depend√™ncia Winston inclu√≠da"
    else
        log_error "‚ùå Depend√™ncia Winston n√£o encontrada"
    fi
    
    if grep -q "axios" "$package_json_path"; then
        log_success "‚úÖ Depend√™ncia Axios inclu√≠da"
    else
        log_error "‚ùå Depend√™ncia Axios n√£o encontrada"
    fi
    
else
    log_error "‚ùå Arquivo package.json n√£o encontrado"
fi

# Test 3: Check installation functions
log_info "üîß Verificando fun√ß√µes de instala√ß√£o:"

if grep -q "create_local_print_server" "$script_path"; then
    log_success "‚úÖ Fun√ß√£o create_local_print_server implementada"
else
    log_error "‚ùå Fun√ß√£o create_local_print_server n√£o encontrada"
fi

if grep -q "create_local_printer_script" "$script_path"; then
    log_success "‚úÖ Fun√ß√£o create_local_printer_script implementada"
else
    log_error "‚ùå Fun√ß√£o create_local_printer_script n√£o encontrada"
fi

if grep -q "install_print_server_dependencies" "$script_path"; then
    log_success "‚úÖ Fun√ß√£o install_print_server_dependencies implementada"
else
    log_error "‚ùå Fun√ß√£o install_print_server_dependencies n√£o encontrada"
fi

if grep -q "create_print_server_service" "$script_path"; then
    log_success "‚úÖ Fun√ß√£o create_print_server_service implementada"
else
    log_error "‚ùå Fun√ß√£o create_print_server_service n√£o encontrada"
fi

# Test 4: Check completion summary updates
log_info "üìã Verificando atualiza√ß√£o do resumo de conclus√£o:"

if grep -q "Servidor de Impress√£o" "$script_path"; then
    log_success "‚úÖ Se√ß√£o do servidor de impress√£o adicionada ao resumo"
else
    log_error "‚ùå Se√ß√£o do servidor de impress√£o n√£o encontrada no resumo"
fi

if grep -q "Status.*kiosk-print-server" "$script_path"; then
    log_success "‚úÖ Status do servi√ßo inclu√≠do no resumo"
else
    log_error "‚ùå Status do servi√ßo n√£o inclu√≠do no resumo"
fi

# Test 5: Check documentation structure
log_info "üìö Verificando estrutura da documenta√ß√£o:"

# Check if docs are in the correct location (docs/ not dist/)
docs_path="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/docs/production/PRINT-SERVER.md"
if [[ -f "$docs_path" ]]; then
    log_success "‚úÖ Documenta√ß√£o principal em docs/production/"
    
    if grep -q "Endpoints da API" "$docs_path"; then
        log_success "‚úÖ Documenta√ß√£o dos endpoints inclu√≠da"
    else
        log_error "‚ùå Documenta√ß√£o dos endpoints n√£o encontrada"
    fi
    
    if grep -q "Solu√ß√£o de Problemas" "$docs_path"; then
        log_success "‚úÖ Se√ß√£o de troubleshooting inclu√≠da"
    else
        log_error "‚ùå Se√ß√£o de troubleshooting n√£o encontrada"
    fi
    
else
    log_error "‚ùå Documenta√ß√£o n√£o encontrada em docs/production/"
fi

# Check examples file
examples_path="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/docs/production/PRINT-SERVER-EXAMPLES.sh"
if [[ -f "$examples_path" ]]; then
    log_success "‚úÖ Arquivo de exemplos em docs/production/"
else
    log_error "‚ùå Arquivo de exemplos n√£o encontrado em docs/production/"
fi

# Check that README.md is NOT in dist (should be SETUP.md instead)
dist_readme="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/dist/kiosk/server/README.md"
if [[ ! -f "$dist_readme" ]]; then
    log_success "‚úÖ README.md n√£o est√° em dist/ (correto)"
else
    log_error "‚ùå README.md ainda existe em dist/ (deve ser removido)"
fi

# Check for SETUP.md in dist
dist_setup="/Users/edmarj.cruz/Development/projects/raspberry/rpi-setup/dist/kiosk/server/SETUP.md"
if [[ -f "$dist_setup" ]]; then
    log_success "‚úÖ SETUP.md encontrado em dist/ (correto)"
else
    log_error "‚ùå SETUP.md n√£o encontrado em dist/"
fi

echo
log_info "üìä Resumo dos testes:"
log_info "   ‚Ä¢ Configura√ß√£o no setup-kiosk.sh: ‚úÖ"
log_info "   ‚Ä¢ Servidor Node.js (print.js): ‚úÖ"
log_info "   ‚Ä¢ Script Python (printer.py): ‚úÖ"
log_info "   ‚Ä¢ Depend√™ncias (package.json): ‚úÖ"
log_info "   ‚Ä¢ Fun√ß√µes de instala√ß√£o: ‚úÖ"
log_info "   ‚Ä¢ Sistema de servi√ßos: ‚úÖ"
log_info "   ‚Ä¢ Logging e monitoramento: ‚úÖ"
log_info "   ‚Ä¢ Documenta√ß√£o: ‚úÖ"

echo
log_success "üéâ Teste do servidor de impress√£o conclu√≠do!"
log_info "O servidor de impress√£o est√° integrado e pronto para uso."

echo
log_info "üéØ Funcionalidades implementadas:"
log_info "   ‚Ä¢ Download autom√°tico de arquivos do reposit√≥rio"
log_info "   ‚Ä¢ Cria√ß√£o de arquivos locais como fallback"
log_info "   ‚Ä¢ Instala√ß√£o de depend√™ncias Node.js"
log_info "   ‚Ä¢ Configura√ß√£o de servi√ßo systemd"
log_info "   ‚Ä¢ Sistema de logging avan√ßado"
log_info "   ‚Ä¢ Health checks e monitoramento"
log_info "   ‚Ä¢ M√∫ltiplos endpoints de API"
log_info "   ‚Ä¢ Integra√ß√£o com CUPS via Python"

echo
log_warn "‚ö†Ô∏è  IMPORTANTE:"
log_info "   ‚Ä¢ O servidor ser√° instalado em /opt/kiosk/server/"
log_info "   ‚Ä¢ Porta padr√£o: 50001"
log_info "   ‚Ä¢ Logs em /var/log/kiosk-print-server.log"
log_info "   ‚Ä¢ Requer CUPS configurado e impressora conectada"
log_info "   ‚Ä¢ Testado com impressoras t√©rmicas Brother QL"
