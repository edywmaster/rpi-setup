#!/bin/bash

# =============================================================================
# Validador de Integra√ß√£o das Instru√ß√µes do Copilot - rpi-setup
# =============================================================================
# Este script valida se as instru√ß√µes do Copilot est√£o adequadamente
# integradas √† estrutura de documenta√ß√£o do projeto

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Contadores
ERRORS=0
WARNINGS=0
SUCCESS=0

log_success() {
    echo -e "${GREEN}‚úì${NC} $1"
    ((SUCCESS++))
}

log_warning() {
    echo -e "${YELLOW}‚ö†${NC} $1"
    ((WARNINGS++))
}

log_error() {
    echo -e "${RED}‚úó${NC} $1"
    ((ERRORS++))
}

log_info() {
    echo -e "${BLUE}‚Ñπ${NC} $1"
}

echo "üß† Validando integra√ß√£o das instru√ß√µes do Copilot..."
echo

# Verificar se arquivo de instru√ß√µes existe
echo "üìã Verificando arquivo de instru√ß√µes..."
if [[ -f ".github/copilot-instructions.md" ]]; then
    log_success "Arquivo de instru√ß√µes existe: .github/copilot-instructions.md"
    
    # Verificar tamanho do arquivo
    local lines=$(wc -l < .github/copilot-instructions.md)
    if [[ $lines -gt 50 ]]; then
        log_success "Arquivo de instru√ß√µes tem conte√∫do substancial ($lines linhas)"
    else
        log_warning "Arquivo de instru√ß√µes pode estar incompleto ($lines linhas)"
    fi
    
    # Verificar se√ß√µes importantes
    if grep -q "Project Overview" .github/copilot-instructions.md; then
        log_success "Cont√©m se√ß√£o 'Project Overview'"
    else
        log_error "Falta se√ß√£o 'Project Overview'"
    fi
    
    if grep -q "Project Structure" .github/copilot-instructions.md; then
        log_success "Cont√©m se√ß√£o 'Project Structure'"
    else
        log_error "Falta se√ß√£o 'Project Structure'"
    fi
    
    if grep -q "Development" .github/copilot-instructions.md; then
        log_success "Cont√©m diretrizes de desenvolvimento"
    else
        log_warning "Pode faltar diretrizes de desenvolvimento espec√≠ficas"
    fi
    
else
    log_error "Arquivo de instru√ß√µes n√£o encontrado: .github/copilot-instructions.md"
fi

echo
echo "üìö Verificando integra√ß√£o com docs/README.md..."

if [[ -f "docs/README.md" ]]; then
    # Verificar se h√° refer√™ncia √†s instru√ß√µes do Copilot
    if grep -q "copilot-instructions.md" docs/README.md; then
        log_success "docs/README.md referencia as instru√ß√µes do Copilot"
    else
        log_error "docs/README.md n√£o referencia as instru√ß√µes do Copilot"
    fi
    
    # Verificar se h√° se√ß√£o espec√≠fica para IA
    if grep -q "Instru√ß√µes para IA" docs/README.md; then
        log_success "docs/README.md tem se√ß√£o dedicada para instru√ß√µes de IA"
    else
        log_warning "docs/README.md pode se beneficiar de uma se√ß√£o dedicada para IA"
    fi
    
    # Verificar se h√° se√ß√£o para desenvolvedores mencionando as instru√ß√µes
    if grep -q "Para Desenvolvedores" docs/README.md && grep -q "copilot-instructions" docs/README.md; then
        log_success "Se√ß√£o para desenvolvedores menciona as instru√ß√µes do Copilot"
    else
        log_warning "Se√ß√£o para desenvolvedores poderia mencionar as instru√ß√µes do Copilot"
    fi
    
    # Verificar se h√° se√ß√£o sobre ferramentas de valida√ß√£o
    if grep -q "Ferramentas de Valida√ß√£o" docs/README.md; then
        log_success "docs/README.md inclui se√ß√£o sobre ferramentas de valida√ß√£o"
    else
        log_warning "docs/README.md poderia incluir se√ß√£o sobre ferramentas de valida√ß√£o"
    fi
    
else
    log_error "docs/README.md n√£o encontrado"
fi

echo
echo "üõ†Ô∏è Verificando ferramentas de valida√ß√£o mencionadas..."

# Verificar se os scripts de valida√ß√£o existem e s√£o mencionados
validation_scripts=(
    "tests/check-docs-reorganization.sh"
    "tests/validate-docs-structure.sh"
    "tests/validate-structure.sh"
)

for script in "${validation_scripts[@]}"; do
    if [[ -f "$script" ]]; then
        log_success "Script de valida√ß√£o existe: $script"
        
        # Verificar se √© mencionado no docs/README.md
        script_name=$(basename "$script")
        if [[ -f "docs/README.md" ]] && grep -q "$script_name" docs/README.md; then
            log_success "Script $script_name √© mencionado na documenta√ß√£o"
        else
            log_warning "Script $script_name poderia ser mencionado na documenta√ß√£o"
        fi
    else
        log_error "Script de valida√ß√£o n√£o encontrado: $script"
    fi
done

echo
echo "üîó Verificando consist√™ncia das refer√™ncias..."

if [[ -f "docs/README.md" ]] && [[ -f ".github/copilot-instructions.md" ]]; then
    # Verificar se a estrutura mencionada nas instru√ß√µes est√° atualizada
    if grep -q "docs/production/" .github/copilot-instructions.md; then
        log_success "Instru√ß√µes do Copilot mencionam estrutura docs/production/"
    else
        log_warning "Instru√ß√µes do Copilot deveriam mencionar estrutura docs/production/"
    fi
    
    if grep -q "docs/development/" .github/copilot-instructions.md; then
        log_success "Instru√ß√µes do Copilot mencionam estrutura docs/development/"
    else
        log_warning "Instru√ß√µes do Copilot deveriam mencionar estrutura docs/development/"
    fi
fi

echo
echo "üìä Resumo da valida√ß√£o de integra√ß√£o:"
echo -e "  ${GREEN}Sucessos: $SUCCESS${NC}"
echo -e "  ${YELLOW}Avisos: $WARNINGS${NC}"
echo -e "  ${RED}Erros: $ERRORS${NC}"

echo
if [[ $ERRORS -eq 0 ]]; then
    if [[ $WARNINGS -eq 0 ]]; then
        echo -e "${GREEN}üéâ Instru√ß√µes do Copilot perfeitamente integradas!${NC}"
    else
        echo -e "${YELLOW}‚úÖ Instru√ß√µes do Copilot integradas com algumas melhorias poss√≠veis.${NC}"
    fi
    exit 0
else
    echo -e "${RED}‚ùå Instru√ß√µes do Copilot precisam de melhor integra√ß√£o.${NC}"
    exit 1
fi
