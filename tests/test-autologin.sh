#!/bin/bash

# =============================================================================
# Teste da Funcionalidade de Autologin - rpi-setup
# =============================================================================
# Este script testa a funcionalidade de autologin sem executar as modifica√ß√µes

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Constantes (mesmo do script principal)
readonly AUTOLOGIN_USER="pi"
readonly AUTOLOGIN_SERVICE_DIR="/etc/systemd/system/getty@tty1.service.d"
readonly AUTOLOGIN_SERVICE_FILE="$AUTOLOGIN_SERVICE_DIR/override.conf"

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}============================================${NC}"
    echo -e "${BLUE} $1${NC}"
    echo -e "${BLUE}============================================${NC}"
}

echo "üß™ Teste da Funcionalidade de Autologin"
echo

print_header "TESTE - CONFIGURA√á√ÉO DE AUTOLOGIN"

# Testar constantes
log_info "üìã Testando constantes definidas:"
log_info "   ‚Ä¢ AUTOLOGIN_USER: $AUTOLOGIN_USER"
log_info "   ‚Ä¢ AUTOLOGIN_SERVICE_DIR: $AUTOLOGIN_SERVICE_DIR"
log_info "   ‚Ä¢ AUTOLOGIN_SERVICE_FILE: $AUTOLOGIN_SERVICE_FILE"

echo
log_info "üîç Verificando pr√©-requisitos do sistema:"

# Verificar se o usu√°rio existe
if id "$AUTOLOGIN_USER" >/dev/null 2>&1; then
    log_success "‚úÖ Usu√°rio '$AUTOLOGIN_USER' existe no sistema"
else
    log_warn "‚ö†Ô∏è  Usu√°rio '$AUTOLOGIN_USER' n√£o encontrado no sistema"
    log_info "   (Em um Raspberry Pi real, este usu√°rio deveria existir)"
fi

# Verificar se systemctl est√° dispon√≠vel
if command -v systemctl >/dev/null 2>&1; then
    log_success "‚úÖ systemctl est√° dispon√≠vel"
    
    # Verificar se o servi√ßo getty@tty1 existe
    if systemctl list-unit-files | grep -q "getty@"; then
        log_success "‚úÖ Servi√ßos getty est√£o dispon√≠veis"
    else
        log_warn "‚ö†Ô∏è  Servi√ßos getty podem n√£o estar dispon√≠veis"
    fi
else
    log_warn "‚ö†Ô∏è  systemctl n√£o est√° dispon√≠vel (normal em macOS)"
fi

# Verificar estrutura de diret√≥rios systemd
if [[ -d "/etc/systemd/system" ]]; then
    log_success "‚úÖ Diret√≥rio systemd existe: /etc/systemd/system"
else
    log_warn "‚ö†Ô∏è  Diret√≥rio systemd n√£o encontrado (normal em macOS)"
fi

echo
log_info "üìù Simulando cria√ß√£o do arquivo de configura√ß√£o:"

# Simular conte√∫do do arquivo
echo "Conte√∫do que seria criado em $AUTOLOGIN_SERVICE_FILE:"
echo "---"
cat << EOF
[Service]
ExecStart=
ExecStart=-/sbin/agetty --autologin $AUTOLOGIN_USER --noclear %I \$TERM
EOF
echo "---"

echo
log_info "üîÑ A√ß√µes que seriam executadas no sistema real:"
log_info "   1. mkdir -p \"$AUTOLOGIN_SERVICE_DIR\""
log_info "   2. Criar arquivo: $AUTOLOGIN_SERVICE_FILE"
log_info "   3. systemctl daemon-reload"
log_info "   4. systemctl restart getty@tty1"
log_info "   5. Verificar status: systemctl is-active getty@tty1"

echo
log_info "‚úÖ Verifica√ß√µes de integra√ß√£o com o script principal:"

# Verificar se a fun√ß√£o existe no script principal
if grep -q "configure_autologin()" ./prepare-system.sh; then
    log_success "‚úÖ Fun√ß√£o configure_autologin() encontrada no script principal"
else
    log_error "‚ùå Fun√ß√£o configure_autologin() n√£o encontrada no script principal"
fi

# Verificar se est√° nas etapas de instala√ß√£o
if grep -A 20 "INSTALLATION_STEPS" ./prepare-system.sh | grep -q "autologin_config"; then
    log_success "‚úÖ autologin_config est√° nas etapas de instala√ß√£o"
else
    log_error "‚ùå autologin_config n√£o est√° nas etapas de instala√ß√£o"
fi

# Verificar se est√° sendo chamada na fun√ß√£o main
if grep -A 20 "System preparation" ./prepare-system.sh | grep -q "configure_autologin"; then
    log_success "‚úÖ configure_autologin est√° sendo chamada na fun√ß√£o main"
else
    log_error "‚ùå configure_autologin n√£o est√° sendo chamada na fun√ß√£o main"
fi

# Verificar vers√£o atualizada
if grep -q "1.0.8" ./prepare-system.sh; then
    log_success "‚úÖ Vers√£o atualizada para 1.0.8"
else
    log_warn "‚ö†Ô∏è  Vers√£o pode n√£o ter sido atualizada"
fi

echo
print_header "RESUMO DO TESTE"

log_info "üìã Funcionalidade de autologin implementada:"
log_info "   ‚Ä¢ Constantes definidas: ‚úÖ"
log_info "   ‚Ä¢ Fun√ß√£o criada: ‚úÖ"  
log_info "   ‚Ä¢ Integrada ao fluxo principal: ‚úÖ"
log_info "   ‚Ä¢ Suporte a state tracking: ‚úÖ"
log_info "   ‚Ä¢ Verifica√ß√µes de seguran√ßa: ‚úÖ"
log_info "   ‚Ä¢ Mensagens informativas: ‚úÖ"

echo
log_success "üéâ Teste da funcionalidade de autologin conclu√≠do!"
log_info "A funcionalidade est√° pronta para ser testada em um Raspberry Pi real."

echo
log_warn "‚ö†Ô∏è  IMPORTANTE:"
log_info "   ‚Ä¢ Este teste foi executado em macOS"
log_info "   ‚Ä¢ Em um Raspberry Pi real, o autologin ser√° configurado automaticamente"
log_info "   ‚Ä¢ O usu√°rio 'pi' deve existir para que o autologin funcione"
log_info "   ‚Ä¢ As mudan√ßas s√≥ t√™m efeito ap√≥s reinicializa√ß√£o ou restart do servi√ßo"
